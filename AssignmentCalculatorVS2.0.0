import tkinter as tk
from tkinter import messagebox

num_assignments = 0
assignment_grades = []  # Fixed syntax error here
assignment_totals = []

def ordinal(n):
    return "%d%s" % (n,"tsnrhtdd"[(n//10%10!=1)*(n%10<4)*n%10::4])

html_link = "https://varsitytutoring.com/"  # Fixed syntax error here

def calculate_grade():
    global num_assignments
    num_assignments = int(num_assignments_entry.get())
    for i in range(0, num_assignments, 1):
        total_window = tk.Toplevel(root)
        total_text = tk.Entry(total_window)
        total_text.pack()
        total_text.insert(0, f'Enter the total points possible for the {ordinal(i + 1)} assignment')

        def submit_total():
            total = int(total_text.get())
            if total < 0:
                raise ValueError("Total must be non-negative.")
            assignment_totals.append(total)
            total_window.destroy()

        submit_button = tk.Button(total_window, text="Submit Total", command=submit_total)
        submit_button.pack()
        total_window.wait_window()  # Wait for the total_window to be closed

        grade_window = tk.Toplevel(root)
        grade_text = tk.Entry(grade_window)
        grade_text.pack()
        grade_text.insert(0, f'Enter the grade received on the {ordinal(1 + i)} assignment')

        def submit_grade():
            grade = int(grade_text.get())
            if grade < 0:
                raise ValueError("Grade must be non-negative.")
            if grade > assignment_totals[i]:
                raise ValueError("Grade cannot be greater than total.")
            assignment_grades.append(grade)
            grade_window.destroy()

        submit_button = tk.Button(grade_window, text="Submit Grade", command=submit_grade)
        submit_button.pack()
        grade_window.wait_window()  # Wait for the grade_window to be closed

    assignment_totals_received = sum(assignment_grades)
    assignment_totals_possible = sum(assignment_totals)
    assignment_average = assignment_totals_received / len(assignment_grades)
    assignment_total_average = assignment_totals_possible / len(assignment_totals)
    assignment_percent = (assignment_totals_received / assignment_totals_possible) * 100

    messagebox.showinfo("Results", 'You have completed {:.0f} so far in this course.\nThe average for the {:.0f} assignments is {:.0f} points, out of an average total of {:.0f} points.\nThe total points received on the {:.0f} assignments is {:.0f} points, out of the {:.0f} points possible.'.format(num_assignments, num_assignments, assignment_average, assignment_total_average, num_assignments, assignment_totals_received, assignment_totals_possible))

    if assignment_percent <= 90 and assignment_percent > 80:
        messagebox.showinfo("Result", f"The grade you received was an {assignment_percent} so far. You should be happy with an A; however, if not visit {html_link}")
    elif assignment_percent <= 80 and assignment_percent > 70:
        messagebox.showinfo("Results",f"The grade you received so far in the course was an {assignment_percent}. You should be happy with a B; however, if not review this website {html_link}")
    elif assignment_percent <= 70 and assignment_percent > 60:
        messagebox.showinfo("Results",f"The grade you received so far in the course was an was an {assignment_percent}. You should try to improve from a C. Please, review this website {html_link}")
    elif assignment_percent <= 60:
        messagebox.showinfo("Results",f"You got {assignment_percent} which is a D. Visit {html_link}")
    else:
        messagebox.showinfo("Results",f"You received an F. Immediately visit {html_link}")     

root = tk.Tk()
root.geometry("800x800")

num_assignments_label = tk.Label(root, text="How many assignments have been completed in the class so far?")
num_assignments_label.pack()

num_assignments_entry = tk.Entry(root)
num_assignments_entry.pack()

calculate_button = tk.Button(root, text="Calculate Grade", command=calculate_grade)
calculate_button.pack()

root.mainloop()

num_assignments_label = tk.Label(root, text="How many assignments have been completed in the class so far?")
num_assignments_label.pack()

num_assignments_entry = tk.Entry(root)
num_assignments_entry.pack()

calculate_button = tk.Button(root, text="Calculate Grade", command=calculate_grade)              
 